version: '3.9'

services:
  # Service pour l'application Django (API backend)
  api:
    build:
      context: ./backend  # Assurez-vous que c'est le chemin correct vers le Dockerfile.prod du back-end Django
      dockerfile: Dockerfile.prod
    container_name: api
    command: gunicorn pzt_api.wsgi:application --bind 0.0.0.0:8000
    environment:
      - POSTGRES_NAME=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - "8000"
    depends_on:
      - postgres-db

  # Service pour la base de donn√©es PostgreSQL
  postgres-db:
    image: postgres:13
    container_name: postgres-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data/

  # Service pour l'application Vue.js (front-end)
  client:
    build:
      context: ./frontend  # Chemin vers le Dockerfile.prod du front-end Vue.js
      dockerfile: Dockerfile.prod
    container_name: client
    expose:
      - "80"

  # Service pour Nginx
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - client
      - api
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Montre le fichier de configuration nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt  # Montre le dossier des certificats SSL si vous utilisez HTTPS

volumes:
  postgres:
